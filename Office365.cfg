<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <section name="Office365Config" type="Arcserve.Office365.Exchange.Util.Setting.Office365Config, Arcserve.Office365.Exchange" />
    <section name="SharePointConfig" type="Arcserve.Office365.Exchange.Util.Setting.SharePointConfig, Arcserve.Office365.Exchange"/>
  </configSections>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>
  <appSettings>
    <!--#region Log part-->
    <!--Office365 folder, defalt is ""-->
    <add key="LogPath" value="" />
    <!--Is log, true is 1, false is 0, default is 1-->
    <add key="IsLog" value="1" />
    <!--support ews trace log, true is 1, false is 0, default is 0-->
    <add key="IsEwsTraceLog" value="0" />
    <!--a log file support max record count, default: 500000-->
    <add key="LogFileMaxRecordCount" value="500000"/>
    <!-- log type:
        COM = 0,
        ERR = 1,
        WARN = 2,
        INFO = 3, // default value
        DEBUG = 4, 
        ForProgrammer = 99
    -->
    <add key="LogType" value="3"/>
    <!--Enable debug for request header, if value is 1, will add httpheader when downloading msg files. if value is 0, will not add httpheader.
    ref url: https://docs.microsoft.com/en-us/exchange/client-developer/exchange-web-services/instrumenting-client-requests-for-ews-and-rest-in-exchange
    -->
    <add key="DebugForRequestHeader" value="0"/>
    <!--After enabling debug for request header, 
    if this value is 1(default value), will only record the request id for operation download mail(exportitems operations), 
    if this value is 2, will record the request id for all operation.-->
    <add key="WhichOperationToAddHeader" value="1"/>
    <!--#endregion-->
    
    <!--#region part: temp folder-->
    <add key="TempFolder" value=""/>
    <!--use expire time to delete backup temp folder. 0 is false, 1 is true, default: 0-->
    <add key="UseExpireTimeToDeleteBackupFolder" value="0"/>
    <!--use expire time to delete restore temp folder. 0 is false, 1 is true, default : 0-->
    <add key="UseExpireTimeToDeleteRestoreFolder" value="0"/>
    <!--use expire time to delete catalog temp folder. 0 is false, 1 is true, default:1-->
    <add key="UseExpireTimeToDeleteCatalogFolder" value="1"/>
    <!--expire time to delete backup temp folder. unit: day, defaultvalue:90. means 90 days.-->
    <add key="ExpireTimeToDeleteBackupFolder" value="90"/>
    <!--expire time to delete restore temp folder. unit: day, defaultvalue:90. means 90 days.-->
    <add key="ExpireTimeToDeleteRestoreFolder" value="90"/>
    <!--expire time to delete catalog temp folder. unit: day, defaultvalue:7. means 7 days.-->
    <add key="ExpireTimeToDeleteCatalogFolder" value="7"/>
    <!--expire time for catalog file cache, unit:minutes, default:20. if out of 20 minutes, the cache will be removed and the temp catalog file will be deleted.-->
    <add key="ExpireTimeForCatalogFileCache" value="20"/>
    <!--#endregion-->
    
    <!--the timespan for updating progress to UI. default value 30, unit:minute-->
    <add key="UpdateRealProgressToUITimeSpanInMinute" value="30"/>
    
    <!--#region following is for batch import and export
         First, we collect a list
         Then, we divide the list into serveral groups.
            each group contains some small size items, and a little large items.
            if a item exceed a limitation size, it will be a group which only contains itself.
         finally, batch request for each group.   
    -->
    <!--List count, default:400-->
    <add key="Batch_TotalCountForStartRequest" value="1000" />
    <!--Each group count, default 50-->
    <add key="Batch_OnceRequestCount" value="100" />
    <!--The max size in group default 10MB-->
    <add key="Batch_SupportItemSizeMB" value="10" />
    <!--The small item count in group default:30-->
    <add key="Batch_OnceSmallItemCountInRequest" value="60" />
    <!--The large item count in group default:20-->
    <add key="Batch_OnceLargeItemCountInRequest" value="40" />

    <!--List count, default:400-->
    <add key="Batch_TotalCountForStartRequestForRestore" value="400" />
    <!--Each group count, default 50-->
    <add key="Batch_OnceRequestCountForRestore" value="50" />
    <!--The max size in group default 10MB-->
    <add key="Batch_SupportItemSizeMBForRestore" value="10" />
    <!--The small item count in group default:30-->
    <add key="Batch_OnceSmallItemCountInRequestForRestore" value="30" />
    <!--The large item count in group default:20-->
    <add key="Batch_OnceLargeItemCountInRequestForRestore" value="20" />
    <!--#endregion-->
    
    <!--#region part about saving to catalog-->
    <!--save to catalog list count. default:0-->
    <!--<add key="BatchSaveToCatalogCount" value="0"/>-->
    <!--#endregion-->

    <!--#region argument for powershell-->
    <add key="LiveIDConnectionUrl" value="https://ps.outlook.com/PowerShell-LiveID?PSVersion=2.0"/>
    <add key="SchemaUrl" value="http://schemas.microsoft.com/powershell/Microsoft.Exchange"/>
    <!--#endregion-->
    
    <!--#region for test part-->
    <!--Is using the test folder(TestMountFolder), default:0, value:1 or 0.-->
    <add key="IsUseTestMountFolder" value="0"/>
    <add key="TestMountFolder" value="E:\TestData"/>
    <!--Enable write data from folder default: 0-->
    <add key="TestWriteLocalFileToMountFolder" value="0"/>
    <!--the folder for saving data and catalog data-->
    <add key="TestLocalFolderPath" value="E:\TestData\20190516115756\haiyang.ling@arcservedevqa.onmicrosoft.com"/>
    <!--if 0 means write file when export items, if 1 means write file when job start -->
    <add key="WriteLocalFileStyle" value="1"/>
    <add key="TestWriteExistFileSizeInMemoryMB" value="‭1024‬"/>
    <add key="TestWriteTotalFileSizeGB" value="0"/>
    <!--unit: kb-->
    <add key="WriteBufferCount" value="4096"/>
    <!--return success and don't access and backup any mailboxes-->
    <add key="TestReturnSuccessWithoutBackup" value="0"/>
    <!--is write data to Data Store, false is 0, true is 1 default value: 1,-->
    <add key="TestIsWriteToRPS" value="1"/>
    <!--is return thousands mailboxes for test. default value: "0"-->
    <add key="TestReturnThousandsMailboxes" value="0"/>
    <!--backup mailbox list. format: test1@company.com;test2@company.com. default value:""-->
    <add key="TestBackupMailboxList" value=""/>
    <add key="EnableCanceleJob" value="0"/>
    <add key="EnableCrashJob" value="0"/>
    <add key="TestSkipAllItems" value="0"/>
    <add key="TestSetExportFailedCount" value="0"/>
    <add key="TestNotExportItems" value="0"/>
    <add key="QueryCanceledInterval" value="2"/>
    <add key="IsCommunicationWithCom" value="1"/>
    <add key="TestDisableDbAccess" value="0"/>
    <add key="SharePointTestDownloadFile" value="1"/>
    <!--#endregion-->
    
    <!--#region for multi thread-->
    <!--MultiThreadEnable default value:0. if enable, set 1.-->
    <add key="MultiThreadEnable" value ="1"/>
    <!--If it is 1, the config "MaxDegreeOfParallelismForMailbox" will be dynamically set to CPU Core * 2-->
    <add key="EnableDynamicSetThreadCount" value="1"/>
    <!--set how many thread will be used to backup mailbox. default value is 16, when "EnableDynamicSetThreadCount" value is 0, it will be worked.-->
    <add key="MaxDegreeOfParallelismForMailbox" value="16"/>
    <!--set how many thread for export items-->
    <add key="ExportItemsWorkerCount" value="160"/>
    <!--set the limitation of exportitems thread count for each mailbox, the max value is 20. min value is 1. default value is 10.-->
    <add key="MaxConnectionCountForEachMailbox" value="10"/>
    <!--#endregion-->
    <!--Proxy setting for remote connectiong in power shell.-->
    <add key="ProxyConfigValue" value="-1"/>
    
    <!--#region part for ews service api -->
    <!--LoadItemProperty request list count, default:200-->
    <add key="BatchLoadPropertyItemCount" value="200" />
    <!--the return count when calling sync folder to get folder change list, default value:200.-->
    <add key="FolderChangesCountWhenSync" value="200" />
    <!--the folder load count default value is 500-->
    <add key="BatchLoadFolderCount" value="500"/>
    <!--Do we rewrite the item data when item read flag changed, default value:false-->
    <add key="IsRewriteDataIfReadFlagChanged" value="0"/>
    <!--Wait time when some exception happens, default value :30, unit: second-->
    <add key="SuspendRequestTimeAfterThrowSpecificExceptionInSeconds" value="30"/>
    <!--Export items http request time out setting, default is 900 seconds, unit seconds.-->
    <add key="ExportItemHttpRequestTimeOut" value="900" />
    <!--Sleep seconds. default value 60. unit: second.
        When exports/imports items fails, will sleep seconds and retry with less items.-->
    <add key="ExportImportRetryLessItemTime" value="60"/>
    <!--import items http request timeout. value: 600 unit:second.-->
    <add key="ImportItemHttpRequestTimeOut" value="600"/>
    <!-- each ews api operation time out limitation (unit:second), default is 900 seconds, unit: seconds -->
    <add key="EwsApiOperationTimeOut" value="900" />

    <!--how many items should get from the job setting, it uses for paging. default value: 20-->
    <add key="BatchLoadItemsCountForRestore" value="20"/>
    <!--how many mailboxes can in filters when get all mailboxes. if exceed, will get all mailboxes and then filter. else will put the filter mailbox into filter parameters in get mailbox command.
        default value:180.-->
    <add key="MaxGetAllMailboxParameterCount" value="180"/>
    <!--support public folder folders.-->
    <add key="EnablePublicFolder" value="1"/>
    <!--support backup members of group, if value is 1. will support browser group and backup group members. if 0, only show user mailboxes.-->
    <add key="EnableBackupOffice365GroupMembers" value="0"/>
    <!--show non security group. if only show non security group, set the value to 1, else set the value to 0.-->
    <add key="ShowNonSecurityGroup" value="0"/>
    <!--if support backup members of group, set the group and mailbox display style. if 1, means shows both. if 2, means only show group.-->
    <add key="ShowOffice365GroupStyle" value="2"/>
    <!--which error code not need retry when load item properties, format: ;errorcodeIntValue1;errocodeIntValue2; , view class Microsoft.Exchange.WebServices.Data.ServiceError-->
    <add key="NotRetryErrorCodes" value=";249;108;"/>
    <!--#endregion-->
    <!--support empty folder class, if 0, not support, if 1, support. default value is 1-->
    <add key="EnableEmptyFolderClass" value="1"/>
    
    <!--#region following is sharepoint setting-->
    <add key="aspnet:MaxHttpCollectionKeys" value="200000" />
    <add key="SharepointGetUserByPermission" value="3;4;5;6"/>
    <add key="SharePointMultiThread" value="1"/>
    <add key="SharepointEnumSiteForTreeThreadCount" value="4"/>
    <add key="SharePointEnumSiteTreeTimeOutInSecond" value="600"/>
    <!--SharePointThreadSettingType: 0 means set automatically by CPU Core, 1 means manually set-->
    <add key="SharePointThreadSettingType" value="0"/>
    <add key="SharepointListMaxThreadCount" value="10"/>
    <add key="SharePointDownloadMaxThreadCount" value="10"/>
    <add key="SharePointDownloadInitThreadCount" value="10"/>
    <add key="SharePointLocalServer" value="0"/>
    <add key="SharePointLoadListItemCountInCAML" value="50"/>
    <add key="SharePointListNotSupportRestoreColumn" value=";TaxKeywordTaxHTField;TaxCatchAll;"/>
    <!--#endregion-->
    
    <!-- following not used in this version.-->
    <add key="SupportMaxSize" value="30" />
    <add key="SqlServerVersion" value="2014" />
    <add key="ClientSettingsProvider.ServiceUri" value="" />
    <!--Db Connection String-->
    <add key="ForDebugAzure" value="0" />
    <!--Subscription Name for Azure-->
    <add key="SubscriptionNameForScheduler" value="Visual Studio Enterprise" />
    <!--Service Bus Config-->
    <add key="ServiceBusNameSpace" value="arcserveo365" />
    <!--Queue-->
    <!--minute in value-->
    <add key="ServiceBusQueueTTL" value="5" />
    <!--MB in value-->
    <add key="ServiceBusQueueMaxSize" value="5120" />
    <add key="ServiceBusQueueName" value="arcserveo365queue" />
    <!--Topic-->
    <!--minute in value-->
    <add key="ServiceBusTopicTTL" value="5" />
    <!--MB in value-->
    <add key="ServiceBusTopicMaxSize" value="5120" />
    <add key="ServiceBusTopicName" value="arcserveo365topic" />
  </appSettings>
  <SharePointConfig>
    <ExceptionHandler>
      <add name="Default" TypeFullName="Arcserve.Office365.SharePoint.Protect.Utils.DefaultExceptionHandler" Assembly="Arcserve.Office365.SharePoint.Protect.dll"></add>
    </ExceptionHandler>
  </SharePointConfig>
  <Office365Config>
    <!--
    for example:
    If nodename is office365test.
     And client has select some mailbox, it's set is Set(Selected)
     It's include regex is includeRegex1, it's set is Set(IncludeRegex)
          include file is includeFilePath1, it's set is Set(IncludeFile)
          exclude regex is excludeRegex1, it's set is Set(ExcludeRegex)
          exclude file is excludeFilePath1,it's set is Set(excludeFile)
     So the office365test node mailboxes result is :
      Set(Result) = ( Set(Selected)  &&  (Set(IncludeRegex) + Set(IncludeFile)) ) - ( Set(ExcludeRegex) + Set(ExcludeFile) )
      A && B means mailbox both in A and B.
    -->
    <MailboxFilterSetting>
      <add NodeName="aabbc" IncludeRegex="(haiyang|mingrui).*" IncludeFile="" ExcludeRegex="haiyang.*" ExcludeFile=""/>
    </MailboxFilterSetting>
    <RetryExceptionSetting>
      <!--
        name: key. unique. required
        ExceptionTypeFullName: type full name.required.
        ExceptionTypeAssembly: assembly full name. required.
        ExceptionHResult: the error result. optional.
        ErrorCode: the error code. optional.
        IsRetry: retry if error happens, optional, default value "1". (means true, false is "0".). 
        IsSuspendAllRequest: suspend all request if error happens, optional, default value "1". (means true, false is "0".).
        IsToActivityLog: log to UI if error happens, default value "1". (means true, false is "0".).
        OtherPropertyName: the property name in exception. (default is "").
        OtherPropertyValue: the expect property value.(default is "").
        ResMessageKey: the error message or error message format Resource key, the message may be shown in UI. optional.
        -->
      <add name="XmlExceptionForExport" ExceptionTypeFullName="System.Xml.XmlException" ExceptionTypeAssembly="System.Xml" ExceptionHResult="-2146232000" ResMessageKey="Backup_Export_Items_Fail" IsToActivityLog="0" IsRetry="0" IsSuspendAllRequest="0" />
      <add name="ServerBusyException" ExceptionTypeFullName="Microsoft.Exchange.WebServices.Data.ServerBusyException" ExceptionTypeAssembly="Microsoft.Exchange.WebServices" ExceptionHResult="-2146233088" ResMessageKey="Job_Failed_With_ServerBusy_Exception" IsRetry="1" IsSuspendAllRequest="1" />
      <add name="MailboxDataBaseIsUnavailable" ExceptionTypeFullName="Arcserve.Office365.Exchange.Data.Increment.EwsResponseException" ExceptionTypeAssembly="Arcserve.Office365.Exchange.Data" ResMessageKey="Backup_Mailbox_Fails_With_Unavailable_Mailbox_Database_Service" ErrorCode="ErrorMailboxStoreUnavailable" IsRetry="1" IsSuspendAllRequest="1" />
      <add name="MailboxNotExist" ExceptionTypeFullName="Microsoft.Exchange.WebServices.Data.ServiceResponseException" ExceptionTypeAssembly="Microsoft.Exchange.WebServices" ErrorCode="ErrorNonExistentMailbox" IsRetry="0" IsSuspendAllRequest="0" />
      <add name="SyncFolderNotExist" ExceptionTypeFullName="Microsoft.Exchange.WebServices.Data.ServiceResponseException" ExceptionTypeAssembly="Microsoft.Exchange.WebServices" ErrorCode="ErrorSyncFolderNotFound" IsRetry="0" IsSuspendAllRequest="0" />
      <add name="FolderNotExist" ExceptionTypeFullName="Microsoft.Exchange.WebServices.Data.ServiceResponseException" ExceptionTypeAssembly="Microsoft.Exchange.WebServices" ErrorCode="ErrorFolderNotFound" IsRetry="0" IsSuspendAllRequest="0" />
      <add name="ItemNotExist" ExceptionTypeFullName="Microsoft.Exchange.WebServices.Data.ServiceResponseException" ExceptionTypeAssembly="Microsoft.Exchange.WebServices" ErrorCode="ErrorItemNotFound" IsRetry="0" IsSuspendAllRequest="0" />
      <add name="AccessDenied" ExceptionTypeFullName="Microsoft.Exchange.WebServices.Data.ServiceResponseException" ExceptionTypeAssembly="Microsoft.Exchange.WebServices" ErrorCode="ErrorAccessDenied" IsRetry="0" IsSuspendAllRequest="0" />
      <add name="ImportAccessDenied" ExceptionTypeFullName="Arcserve.Office365.Exchange.Data.Increment.EwsImportResponseException" ExceptionTypeAssembly="Arcserve.Office365.Exchange.Data" OtherPropertyName="ResponseCode" OtherPropertyValue="ErrorAccessDenied" IsRetry="0" IsSuspendAllRequest="0" />
      <add name="MapiExceptionNoAccess" ExceptionTypeFullName="Arcserve.Office365.Exchange.Data.Increment.EwsImportResponseException" ExceptionTypeAssembly="Arcserve.Office365.Exchange.Data" SubErrorMessage="MapiExceptionNoAccess" IsRetry="0" IsSuspendAllRequest="0" />
      <add name="BatchStopped" ExceptionTypeFullName="Arcserve.Office365.Exchange.Data.Increment.EwsImportResponseException" ExceptionTypeAssembly="Arcserve.Office365.Exchange.Data" OtherPropertyName="ResponseCode" OtherPropertyValue="ErrorBatchProcessingStopped" SubErrorMessage="a previous error" IsRetry="1" IsSuspendAllRequest="0" />
      <add name="ItemNotExistForImportExport" ExceptionTypeFullName="Arcserve.Office365.Exchange.Data.Increment.EwsResponseException" ExceptionTypeAssembly="Arcserve.Office365.Exchange.Data" ErrorCode="ErrorItemNotFound" IsRetry="0" IsSuspendAllRequest="0" />
      <add name="MailboxInternalError" ExceptionTypeFullName="Microsoft.Exchange.WebServices.Data.ServiceResponseException" ExceptionTypeAssembly="Microsoft.Exchange.WebServices" ErrorCode="ErrorInternalServerError" IsRetry="0" IsSuspendAllRequest="0" />
      <add name="CannotConnectServer" ExceptionTypeFullName="System.Net.WebException" OtherPropertyName="Status" OtherPropertyValue="NameResolutionFailure" ExceptionTypeAssembly="System" IsRetry="0" IsSuspendAllRequest="0"/>
      <add name="KeepAliveFailure" ExceptionTypeFullName="Microsoft.Exchange.WebServices.Data.ServiceRequestException" ExceptionTypeAssembly="Microsoft.Exchange.WebServices" ErrorCode="KeepAliveFailure" IsRetry="1" IsSuspendAllRequest="1" />
    </RetryExceptionSetting>
    <!--following folder type will be skipped.-->
    <ExcludeFolderTypes>
      <add FolderType="IPF.Contact.MOC.QuickContacts" />
      <add FolderType="IPF.Contact.MOC.ImContactList" />
      <add FolderType="IPF.Contact.Company" />
      <add FolderType="IPF.Contact.GalContacts" />
      <add FolderType="IPF.Contact.OrganizationalContacts" />
      <add FolderType="IPF.Contact.PeopleCentricConversationBuddies" />
      <add FolderType="IPF.Contact.RecipientCache" />
      <add FolderType="IPF.Configuration" />
      <add FolderType="IPF.Files" />
    </ExcludeFolderTypes>
    <NotBackupFolderItems>
      <add FolderWellknowName="ArchiveRoot" IsRestoreItem="false"/>
    </NotBackupFolderItems>
    <!--following is not shown in restore wizard. FolderDisplayName-->
    <ExcludeShowFolder>
      <add FolderDisplayName="PersonMetadata" />
    </ExcludeShowFolder>
    <!--following is ews service config, and the default value:
        OverrideCertValidation = "true"
        EnableSslDetailLogging = "false"
        AllowAutodiscoverRedirect = "true"
        OverrideTimezone = "false"
        SelectedTimeZoneId = ""
        EnableScpLookups = "true"
        PreAuthenticate = "false"
        OverrideTimeout = "false" // ignore.
        Timeout = "600000"  // ignore.
        UserAgent = "ISV|Arcserve|Unified Data Protection/7.0"
        SetDefaultProxy = "false" // use default config see <system.net><defaultProxy><proxy>
        BypassProxyForLocalAddress = "false"
        SpecifyProxySettings = "false"
        ProxyServerName = "127.0.0.1"
        ProxyServerPort = "8888"
        OverrideProxyCredentials = "false"
        ProxyServerUser = ""
        ProxyServerPassword = ""
        ProxyServerDomain = ""
        XAnchorMailbox = "" // ignore.
        SetXAnchorMailbox = "false" // ignore.
    -->
    <EwsSetting
       OverrideCertValidation = "true"
        EnableSslDetailLogging = "false"
        AllowAutodiscoverRedirect = "true"
        OverrideTimezone = "false"
        SelectedTimeZoneId = ""
        EnableScpLookups = "true"
        PreAuthenticate = "false"
        OverrideTimeout = "false"
        Timeout = "600000"
        UserAgent = "ISV|Arcserve|Unified Data Protection/7.0"
        SetDefaultProxy = "false"
        BypassProxyForLocalAddress = "false"
        SpecifyProxySettings = "false"
        ProxyServerName = "127.0.0.1"
        ProxyServerPort = "8888"
        OverrideProxyCredentials = "false"
        ProxyServerUser = ""
        ProxyServerPassword = ""
        ProxyServerDomain = ""
        XAnchorMailbox = ""
        SetXAnchorMailbox = "false"
        RequestedExchangeVersion = "5"
        EnableAutodiscovery ="false"
        WsUrl = "https://outlook.office365.com/EWS/Exchange.asmx"
      />
  </Office365Config>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
      <provider invariantName="System.Data.SQLite" type="System.Data.SQLite.EF6.SQLiteProviderServices, System.Data.SQLite.EF6" />
      <provider invariantName="System.Data.SQLite.EF6" type="System.Data.SQLite.EF6.SQLiteProviderServices, System.Data.SQLite.EF6" />
    </providers>
  </entityFramework>
  <system.data>
    <DbProviderFactories>
      <remove invariant="System.Data.SQLite.EF6" />
      <add name="SQLite Data Provider (Entity Framework 6)" invariant="System.Data.SQLite.EF6" description=".NET Framework Data Provider for SQLite (Entity Framework 6)" type="System.Data.SQLite.EF6.SQLiteProviderFactory, System.Data.SQLite.EF6" />
      <remove invariant="System.Data.SQLite" />
      <add name="SQLite Data Provider" invariant="System.Data.SQLite" description=".NET Framework Data Provider for SQLite" type="System.Data.SQLite.SQLiteFactory, System.Data.SQLite" />
    </DbProviderFactories>
  </system.data>
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
      </providers>
    </roleManager>
  </system.web>
  <system.net>
    <connectionManagement>
      <add address="*" maxconnection="1024"/>
    </connectionManagement>
  </system.net>
</configuration>